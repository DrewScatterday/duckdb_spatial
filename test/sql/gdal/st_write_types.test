require spatial

# Create table with all different geometry types
statement ok
CREATE TABLE st_write_geometry (id INTEGER, geom GEOMETRY, value DOUBLE);

# Insert data
statement ok
INSERT INTO st_write_geometry VALUES 
	(1, ST_GeomFromText('POINT(0 0)'), 10.0),
	(2, ST_GeomFromText('LINESTRING(0 0, 1 1)'), 20.0),
	(3, ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))'), 30.0),
	(4, ST_GeomFromText('MULTIPOINT(0 0, 1 1)'), 40.0),
	(5, ST_GeomFromText('MULTILINESTRING((0 0, 1 1), (2 2, 3 3))'), 50.0),
	(6, ST_GeomFromText('MULTIPOLYGON(((0 0, 1 0, 1 1, 0 1, 0 0)), ((2 2, 3 2, 3 3, 2 3, 2 2)))'), 60.0),
	(7, ST_GeomFromText('GEOMETRYCOLLECTION(POINT(0 0), LINESTRING(0 0, 1 1))'), 70.0);

# Test Copy
statement ok
COPY (SELECT * FROM st_write_geometry) TO '__TEST_DIR__/st_write_geometry.geojson'
WITH (FORMAT GDAL, DRIVER 'GeoJSON', LAYER_CREATION_OPTIONS 'WRITE_BBOX=YES');

# Test reading it back
query III
SELECT id, value, ST_GeomFromWKB(wkb_geometry),  FROM st_read('__TEST_DIR__/st_write_geometry.geojson') ORDER BY id
----
1	10.0	POINT (0 0)
2	20.0	LINESTRING (0 0, 1 1)
3	30.0	POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0))
4	40.0	MULTIPOINT (0 0, 1 1)
5	50.0	MULTILINESTRING ((0 0, 1 1), (2 2, 3 3))
6	60.0	MULTIPOLYGON (((0 0, 1 0, 1 1, 0 1, 0 0)), ((2 2, 3 2, 3 3, 2 3, 2 2)))
7	70.0	GEOMETRYCOLLECTION (POINT (0 0), LINESTRING (0 0, 1 1))
